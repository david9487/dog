#include <LWiFi.h>
#include<Wire.h>
#include<SPI.h>
#include<Adafruit_GFX.h>
#include<Adafruit_SSD1306.h>

#define OLED_MOSI 11
#define OLED_CLK 12
#define OLED_DC 9
#define OLED_CS 8
#define OLED_RESET 10
Adafruit_SSD1306 display(OLED_MOSI,OLED_CLK,OLED_DC,OLED_RESET,OLED_CS);

char ssid[] = "Jennifer iphone";      // your network SSID (name)
char pass[] = "aaaa4444";   // your network password
int keyIndex = 0;                 // your network key Index number (needed only for WEP)

int status = WL_IDLE_STATUS;

WiFiServer server(80);
static const unsigned char PROGMEM Logo[] = {
  B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, 
 B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, 
  B11111111, B00000011, B11111111, B11111111, B11111111, B11111111, B11000000, B11111111, 
  B11111111, B00000000, B11111111, B11111111, B11111111, B11111111, B00000000, B01111111, 
  B11111100, B00000000, B11111111, B11111111, B11111111, B11111111, B00000000, B00111111, 
  B11110000, B00000000, B11111111, B11111111, B11111111, B11111111, B00000000, B00001111, 
  B11110000, B00000000, B01111111, B11110000, B00011111, B11111110, B00000000, B00001111, 
  B11111100, B00000000, B01111110, B00000000, B00000000, B01111110, B00000000, B00111111, 
  B11111111, B11111000, B01110000, B00000000, B00000000, B00011110, B00011111, B11111111, 
  B11111111, B11111111, B11000000, B00000000, B00000000, B00000111, B11111111, B11111111, 
  B11111111, B11111111, B10000000, B00000000, B00000000, B00000011, B11111111, B11111111, 
  B11111111, B11111111, B00000000, B00000000, B00000000, B00000001, B11111111, B11111111, 
  B11111111, B11111111, B00000000, B00000000, B00000000, B00000001, B11111111, B11111111, 
  B11111111, B11111111, B00000000, B00000000, B00000000, B00000000, B11111111, B11111111, 
  B11111111, B11111111, B00011111, B10000000, B00000011, B11110000, B11111111, B11111111, 
  B11111111, B11111111, B01111111, B11000000, B00000111, B11111100, B11111111, B11111111, 
  B11111111, B11111111, B11111111, B11100000, B00001111, B11111111, B11111111, B11111111, 
  B11111111, B11111111, B01111111, B11100000, B00000111, B11111111, B11111111, B11111111, 
  B11111111, B11111111, B00011111, B10000000, B00000011, B11111000, B11111111, B11111111, 
  B11111111, B11111111, B00000000, B00000000, B00000000, B00000000, B11111111, B11111111, 
  B11111111, B11111111, B00000000, B00000111, B11000000, B00000001, B11111111, B11111111, 
  B11111111, B11111111, B10000000, B00001111, B11100000, B00000011, B11111111, B11111111, 
  B11111111, B11111111, B11111110, B00000000, B00000000, B01111111, B11111111, B11111111, 
  B11111111, B11111100, B00001111, B11000000, B00000111, B11110000, B00111111, B11111111, 
  B11111111, B10000000, B00011111, B11111111, B11111111, B11111000, B00000001, B11111111, 
  B11111000, B00000000, B01111111, B11101001, B00100111, B11111110, B00000000, B00011111, 
  B11110000, B00000000, B01111111, B11101001, B00100111, B11111110, B00000000, B00001111, 
  B11110000, B00000000, B01111111, B11111111, B11111111, B11111110, B00000000, B00001111, 
  B11111111, B00000000, B11111111, B11111111, B11111111, B11111111, B00000000, B11111111, 
  B11111111, B11000001, B11111111, B11111111, B11111111, B11111111, B10000011, B11111111, 
  B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, 
  B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, 
  
};
static const unsigned char PROGMEM LOGO1[] = {
B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, 
  B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, 
  B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, 
  B11111111, B10000000, B11111111, B11111111, B11111111, B11100000, B00111111, B11111111, B11111111, B11111111, 
  B11111100, B00000000, B00111100, B00000000, B00000111, B10000000, B00000111, B11111111, B11111111, B11111111, 
  B11110000, B00000000, B00001100, B00000000, B00000110, B00000000, B00000001, B11111111, B11111111, B11111111, 
  B11100000, B00000000, B00001110, B00000000, B00001110, B00000000, B00000000, B11111111, B11111111, B11111111, 
  B11000000, B00000000, B00001110, B00000000, B00001110, B00000000, B00000000, B01111111, B11111111, B11111111, 
  B10000000, B00000000, B00001100, B00000000, B00000110, B00000000, B00000000, B00111111, B11111111, B11111111, 
  B10000000, B00000000, B00111100, B00000000, B00000011, B10000000, B00000000, B00111111, B11111111, B11111111, 
  B10000000, B00000000, B11110000, B00000000, B00000001, B11100000, B00000000, B00011111, B11111111, B11111111, 
  B10000000, B00000111, B11000000, B00000000, B00000000, B01111100, B00000000, B00011111, B11111111, B11111111, 
  B10000000, B00001110, B00000000, B00000000, B00000000, B00001111, B00000000, B00111111, B11111111, B11111111, 
  B10000000, B00011000, B00000000, B00000000, B00000000, B00000011, B10000000, B00111111, B11111111, B11111111, 
  B11000000, B00110000, B00000000, B00000000, B00000000, B00000001, B10000000, B00111111, B11111111, B11111111, 
  B11000000, B01110000, B00000000, B00000000, B00000000, B00000001, B11000000, B01111111, B11111111, B11111111, 
  B11110000, B11100000, B00000000, B00000000, B00000000, B00000000, B11100000, B11111111, B11111111, B11111111, 
  B11111111, B11000000, B00000000, B00000000, B00000000, B00000000, B01111111, B10000111, B11111111, B11111111, 
  B11111111, B00000000, B00000000, B00000000, B00000000, B00000000, B00001110, B00000001, B11111111, B11100001, 
  B11111000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00111000, B00000001, 
  B11111000, B00000001, B11110000, B00000000, B00000000, B11110000, B00000000, B00000000, B00000000, B00000001, 
  B11111000, B00000011, B11110000, B00000000, B00000001, B11111000, B00000000, B00000000, B00000000, B00000011, 
  B11111000, B00000011, B11110000, B00000000, B00000001, B11111000, B00000000, B00000000, B00000000, B00001111, 
  B11111100, B00000011, B11110000, B00000000, B00000001, B11111000, B00000000, B00000000, B00001111, B11111111, 
  B11111100, B00000000, B11000000, B00000000, B00000000, B01100000, B00000000, B00000000, B00001111, B11111111, 
  B11111100, B00000000, B00000000, B00001110, B00000000, B00000000, B00000000, B00000000, B00000111, B11111111, 
  B11111110, B00000000, B00000000, B01111111, B11000000, B00000000, B00000000, B00000000, B00000111, B11111111, 
  B11111111, B00000000, B00000000, B11111111, B11100000, B00000000, B00001000, B00000000, B00000111, B11111111, 
  B11111111, B00000000, B00000000, B11111111, B11100000, B00000000, B00010000, B00000000, B00000111, B11111111, 
  B11111111, B10000000, B00000000, B01111111, B11000000, B00000000, B00110000, B00000000, B00000111, B11111111, 
  B11111111, B11000000, B00000000, B00001110, B00000000, B00000000, B01100000, B00000000, B00000111, B11111111, 
  B11111111, B11110000, B00000001, B11111111, B11110000, B00000000, B11000000, B00000000, B00000111, B11111111, 
  B11111111, B11111100, B00000000, B11111111, B11100000, B00000011, B10000000, B00000000, B00000011, B11111111, 
  B11111111, B11111111, B00000000, B00000000, B00000000, B00001111, B00000000, B00000000, B00000111, B11111111, 
  B11111111, B11111111, B10000000, B00000000, B00000000, B01111100, B00000000, B00000000, B00000111, B11111111, 
  B11111111, B11111111, B10000010, B00000000, B00000111, B11110000, B00001111, B10000000, B00000111, B11111111, 
  B11111111, B11111111, B10000000, B11111111, B11111111, B00000000, B00011111, B10000000, B00000111, B11111111, 
  B11111111, B11111111, B10000000, B00000000, B10000000, B00000000, B00011111, B10000000, B00000111, B11111111, 
  B11111111, B11111111, B10000000, B00000000, B00011000, B00000000, B00011111, B10000000, B00000111, B11111111, 
  B11111111, B11111111, B10000000, B00000000, B00111100, B00000000, B00011111, B11000000, B00000111, B11111111, 
  B11111111, B11111111, B10000000, B00000011, B11111100, B00000000, B00011111, B11110000, B01111111, B11111111, 
  B11111111, B11111111, B10000000, B00000011, B11111100, B00000000, B00011111, B11111111, B11111111, B11111111, 
  B11111111, B11111111, B10000000, B00000011, B11111100, B00000000, B00001111, B11111111, B11111111, B11111111, 
  B11111111, B11111111, B00000000, B00000011, B11111100, B00000000, B00001111, B11111111, B11111111, B11111111, 
  B11111111, B11111111, B00000000, B00000011, B11111100, B00000000, B00001111, B11111111, B11111111, B11111111, 
  B11111111, B11111111, B10000000, B00000111, B11111100, B00000000, B00001111, B11111111, B11111111, B11111111, 
  B11111111, B11111111, B11000000, B00001111, B11111110, B00000000, B01111111, B11111111, B11111111, B11111111, 
  B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, 
  B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, 
  B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, 
  
};

static const unsigned char PROGMEM LOGO2[] = {
B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00000000, B00000000, B00000010, B00000000, B00000000, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00000000, B00000000, B00001101, B00000000, B00000000, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00000000, B01010000, B00000101, B00000000, B01110000, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00000000, B10001000, B00000010, B00000000, B10001000, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00000001, B10000100, B00000000, B00000001, B00001000, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00000001, B00000110, B00000000, B00000011, B00000100, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00000001, B00000010, B00000000, B00000010, B00000100, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00000010, B00000011, B00000000, B00000100, B00000110, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00000010, B00000001, B00000000, B00000100, B00000010, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00000010, B00000000, B10000000, B00001000, B00000010, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00000100, B00000000, B11111111, B11110000, B00000001, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00000100, B00000000, B00000000, B00000000, B00000001, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00000100, B00000000, B00000000, B00000000, B00000001, B00000011, B00000000, B00000000, 
  B00000000, B00000000, B00000100, B00000000, B00000000, B00000000, B00000001, B00001100, B11000000, B00000000, 
  B00000000, B00000000, B00000100, B00000000, B00000000, B00000000, B00000000, B00000011, B00000000, B00000000, 
  B00000000, B00010000, B00000000, B00001111, B10000000, B00000111, B10000000, B10000001, B00000000, B00000000, 
  B00000000, B00011000, B00001000, B00001111, B10000000, B00000111, B10000000, B10000000, B00000000, B00000000, 
  B00000000, B01100110, B00001000, B00000000, B00000000, B00000000, B00000000, B10000000, B00000000, B00000000, 
  B00000000, B00001000, B00001000, B00000000, B00000000, B00000000, B00000000, B10000000, B00000000, B00000000, 
  B00000000, B00001000, B00001000, B00000000, B00001111, B11000000, B00000000, B01000000, B00000000, B00000000, 
  B00000000, B00000000, B00001000, B00000000, B00011111, B11000000, B00000000, B01000000, B00000000, B00000000, 
  B00000000, B00000000, B00011000, B00000000, B00001111, B10000000, B00000000, B01000000, B00000000, B00000000, 
  B00000000, B00000000, B00010000, B00000000, B00000000, B00000000, B00000000, B01000000, B00000000, B00000000, 
  B00000000, B00000000, B00010000, B00000110, B00000000, B00000011, B00000000, B01000000, B00000000, B00000000, 
  B00000000, B00000000, B00010000, B00000001, B11111000, B01111110, B00000000, B01000000, B00000000, B00000000, 
  B00000000, B00000000, B00010000, B00000000, B11000000, B00001100, B00000000, B01000000, B00000000, B00000000, 
  B00000000, B00000000, B00010000, B00000000, B11000000, B00011000, B00000000, B11000000, B00000000, B00000000, 
  B00000000, B00000000, B00011000, B00000000, B01000000, B00011000, B00000000, B10000000, B00000000, B00000000, 
  B00000000, B00000000, B00001000, B00000000, B01000000, B00010000, B00000000, B10000000, B00000000, B00000000, 
  B00000000, B00000000, B00001100, B00000000, B01100000, B00010000, B00000001, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00000100, B00000000, B00100000, B00100000, B00000001, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00001000, B00000000, B00011111, B11000000, B00000001, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00011000, B00000000, B00000000, B00000000, B00000001, B10000000, B00000000, B00000000, 
  B00000000, B00000000, B00010000, B00000000, B00000000, B00000000, B00000000, B10000000, B00000000, B00000000, 
  B00000000, B00000000, B00010000, B00000000, B00000000, B00000000, B00000000, B11000000, B00000000, B00000000, 
  B00000000, B00000000, B00010000, B00000000, B00000000, B00000000, B00000000, B01000000, B00000000, B00000000, 
  B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, 
  
};
static const unsigned char PROGMEM LOGO3[] = {
B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00000000, B00000000, B00000011, B11111000, B00000000, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00000000, B00000000, B01110000, B00000001, B11000000, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00000000, B00000011, B00000000, B00000000, B00011000, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00000000, B00001000, B00000000, B00000000, B00000110, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00000000, B00100000, B00000000, B00000000, B00000001, B10000000, B00000000, B00000000, 
  B00000000, B00000000, B00000000, B01000000, B00000000, B00000000, B00000000, B01000000, B00000000, B00000000, 
  B00000000, B00000000, B00000001, B00000000, B00000000, B00000000, B00000000, B00110000, B00000000, B00000000, 
  B00000000, B00000000, B00000010, B00000000, B00000000, B00000000, B00000000, B00001000, B00000000, B00000000, 
  B00000000, B00000000, B00000100, B00000000, B00000000, B00000000, B00000000, B00000100, B00000000, B00000000, 
  B00000000, B00000000, B00001000, B00000000, B00000000, B00000000, B00000000, B00000010, B00000000, B00000000, 
  B00000000, B00000000, B00010000, B00000000, B00000000, B00000000, B00000000, B00000010, B00000000, B00000000, 
  B00000000, B00000000, B00010000, B00000000, B00000000, B00000000, B00000000, B00000001, B00000000, B00000000, 
  B00000000, B00000000, B00100000, B00000000, B00000000, B00000000, B00000000, B00000000, B10000000, B00000000, 
  B00000000, B00000000, B00100000, B00000000, B00000000, B00000000, B00000000, B00000000, B10000000, B00000000, 
  B00000000, B00000000, B01000000, B00000000, B00000000, B00000000, B00000000, B00000000, B01000000, B00000000, 
  B00000000, B00000000, B01000000, B00000000, B00000000, B00000000, B00000000, B00000000, B01000000, B00000000, 
  B00000000, B00000000, B00000000, B00000001, B10000000, B00000000, B11100000, B00000000, B01000000, B00000000, 
  B00000000, B00000000, B10000000, B00000011, B11111000, B00000111, B11100000, B00000000, B00100000, B00000000, 
  B00000000, B00000000, B10000000, B00000011, B11111000, B00000111, B11100000, B00000000, B00100000, B00000000, 
  B00000000, B00000000, B10000000, B00000001, B11111000, B00000111, B11100000, B00000000, B00100000, B00000000, 
  B00000000, B00000000, B10000000, B00000001, B11110000, B00000011, B11000000, B00000000, B00100000, B00000000, 
  B00000000, B00000000, B10000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00100000, B00000000, 
  B00000000, B00000000, B10000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00100000, B00000000, 
  B00000000, B00000000, B10000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00100000, B00000000, 
  B00000000, B00000000, B10000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00100000, B00000000, 
  B00000000, B00000000, B10000000, B00000000, B00000000, B00100000, B00000000, B00000000, B00100000, B00000000, 
  B00000000, B00000000, B00000000, B00000000, B00000111, B11111110, B00000000, B00000000, B01000000, B00000000, 
  B00000000, B00000000, B01000000, B00000000, B00011111, B11111111, B10000000, B00000000, B01000000, B00000000, 
  B00000000, B00000000, B01000000, B00000000, B00111100, B00000011, B10000000, B00000000, B01000000, B00000000, 
  B00000000, B00000000, B00100000, B00000000, B01110000, B00000000, B00000000, B00000000, B10000000, B00000000, 
  B00000000, B00000000, B00100000, B00000000, B01100000, B00000000, B00000000, B00000000, B10000000, B00000000, 
  B00000000, B00000000, B00010000, B00000000, B00000000, B00000000, B00000000, B00000001, B00000000, B00000000, 
  B00000000, B00000000, B00011000, B00000000, B00000000, B00000000, B00000000, B00000010, B00000000, B00000000, 
  B00000000, B00000000, B00001000, B00000000, B00000000, B00000000, B00000000, B00000010, B00000000, B00000000, 
  B00000000, B00000000, B00000100, B00000000, B00000000, B00000000, B00000000, B00000100, B00000000, B00000000, 
  B00000000, B00000000, B00000010, B00000000, B00000000, B00000000, B00000000, B00001000, B00000000, B00000000, 
  B00000000, B00000000, B00000001, B00000000, B00000000, B00000000, B00000000, B00010000, B00000000, B00000000, 
  B00000000, B00000000, B00000000, B11000000, B00000000, B00000000, B00000000, B01000000, B00000000, B00000000, 
  B00000000, B00000000, B00000000, B00100000, B00000000, B00000000, B00000000, B10000000, B00000000, B00000000, 
  B00000000, B00000000, B00000000, B00001000, B00000000, B00000000, B00000110, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00000000, B00000011, B00000000, B00000000, B00011000, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00000000, B00000000, B11100000, B00000001, B11000000, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00000000, B00000000, B00000111, B11111100, B00000000, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, 
  
};

#define fsr_pin 14

void setup() {
  //Initialize serial and wait for port to open:
  Serial.begin(9600);
  display.begin(SSD1306_SWITCHCAPVCC);
    display.clearDisplay();
    display.print("PAT ME");
    display.setCursor(45,55);
    display.setTextSize(1);
    display.setTextColor(WHITE);
    display.drawBitmap(23,0,LOGO1,80,50,WHITE);
    display.display();
  while (!Serial) {
    ; // wait for serial port to connect. Needed for native USB port only
  }

  // attempt to connect to Wifi network:
  while (status != WL_CONNECTED) {
    Serial.print("Attempting to connect to SSID: ");
    Serial.println(ssid);
    // Connect to WPA/WPA2 network. Change this line if using open or WEP network:
    status = WiFi.begin(ssid, pass);
  }
  server.begin();
  // you're connected now, so print out the status:
  printWifiStatus();
}


void loop() {
  int fsr_value = analogRead(fsr_pin); // 讀取FSR
    if (fsr_value>4000) {
    display.clearDisplay();
    display.print("dead");
    display.setCursor(32,40);
    display.setTextSize(2);
    display.setTextColor(WHITE);
    display.drawBitmap(23,0,Logo,64,32,WHITE);
  
    display.display();
      }
  else if(fsr_value>=500 && fsr_value<=2800){ 
    display.clearDisplay();
    display.print("SONG LA");
    display.setCursor(35,51);
    display.setTextSize(2);
    display.setTextColor(WHITE);
    display.drawBitmap(23,0,LOGO2,80,50,WHITE);
    display.display();
  }
  else if(fsr_value>=2800 && fsr_value<=4000){ 
    display.clearDisplay();
    display.print("no more");
    display.setCursor(35,51);
    display.setTextSize(2);
    display.setTextColor(WHITE);
    display.drawBitmap(23,0,LOGO3,80,50,WHITE);
    display.display();
  }
  else {
    display.clearDisplay();
    display.print("PAT ME");
    display.setCursor(45,55);
    display.setTextSize(1);
    display.setTextColor(WHITE);
    display.drawBitmap(23,0,LOGO1,80,50,WHITE);
    display.display();
      } 
  // listen for incoming clients
  WiFiClient client = server.available();
  if (client) {
    Serial.println("new client");
    // an http request ends with a blank line
    boolean currentLineIsBlank = true;
    while (client.connected()) {
      if (client.available()) {
        char c = client.read();
        Serial.write(c);
        // if you've gotten to the end of the line (received a newline
        // character) and the line is blank, the http request has ended,
        // so you can send a reply
        if (c == '\n' && currentLineIsBlank) {
          // send a standard http response header
          client.println("HTTP/1.1 200 OK");
          client.println("Content-Type: text/html");
          client.println("Connection: close");  // the connection will be closed after completion of the response
          client.println("Refresh: 5");  // refresh the page automatically every 5 sec
          Serial.print(fsr_value);
          
          client.println();
          client.println("<!DOCTYPE HTML>");
          client.println("<html>");
          // output the value of each analog input pin
          client.print("<p> Pressure is ");
      client.print(fsr_value);
      client.println("</p>");
      client.println("</html>");
      break;
        }
        if (c == '\n') {
          // you're starting a new line
          currentLineIsBlank = true;
        } else if (c != '\r') {
          // you've gotten a character on the current line
          currentLineIsBlank = false;
        }
      }
    }
    // give the web browser time to receive the data
    delay(1);

    // close the connection:
    client.stop();
    Serial.println("client disonnected");
  }
}


void printWifiStatus() {
  // print the SSID of the network you're attached to:
  Serial.print("SSID: ");
  Serial.println(WiFi.SSID());

  // print your WiFi shield's IP address:
  IPAddress ip = WiFi.localIP();
  Serial.print("IP Address: ");
  Serial.println(ip);

  // print the received signal strength:
  long rssi = WiFi.RSSI();
  Serial.print("signal strength (RSSI):");
  Serial.print(rssi);
  Serial.println(" dBm");
}
